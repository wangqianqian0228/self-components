{"remainingRequest":"C:\\Users\\47876\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\self-component\\components\\e-form-item.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\self-component\\components\\e-form-item.vue","mtime":1632568450270},{"path":"C:\\Users\\47876\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\47876\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\47876\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\47876\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\47876\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5zbG90IHsNCiAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KfQ0K"},{"version":3,"sources":["e-form-item.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA","file":"e-form-item.vue","sourceRoot":"components","sourcesContent":["<template>\r\n  <div>\r\n    <label for=\"\" v-if=\"label\">{{ label }}:</label>\r\n    <div class=\"slot\">\r\n      <slot></slot>\r\n      {{ message }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Schema from \"async-validator\";\r\nexport default {\r\n  inject: [\"eform\"],\r\n  name: \"e-form-item\",\r\n  props: {\r\n    label: String,\r\n    prop: String,\r\n  },\r\n  data() {\r\n    return {\r\n      message: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    /*  父级对传来的这个值进行校验\r\n    1. 要用到父级e-form的rules => 直接用provide 和inject来获取\r\n    2. rules和prop进行匹配,对val进行校验 => 用第三方库来校验\r\n     */\r\n    this.$on(\"validator\", function () {\r\n      this.validate();\r\n      // console.log(this.validate(val))\r\n    });\r\n  },\r\n  methods: {\r\n    // 校验数据\r\n    validate() {\r\n      /* \r\n      1. 获取规则\r\n      2. 获取当前数据,可以直接拿$emit中的value,也可以直接拿form中的数据,反正他们已经双向绑定了,拿谁都可以 \r\n      3. 后面发现拿$emit中的value不方便,数据来源太单一.\r\n      */\r\n      let rules = this.eform.rules[this.prop];\r\n      let val = this.eform.model[this.prop]\r\n      // console.log({ rules });\r\n      //  定义属性描述规则\r\n      let descriptor = {\r\n        //  rules这里可以是一个数组,也可以是一个对象\r\n        [this.prop]: rules,\r\n      };\r\n      // descriptor分配给schema，创建一个validator\r\n      let validator = new Schema(descriptor);\r\n      // 参数一：要验证的对象、参数二：回调函数,返回值是一个promise\r\n      return validator.validate({ [this.prop]: val }, (errors) => {\r\n        if (errors) {\r\n          this.message = errors[0].message;\r\n        } else {\r\n          this.message = \"\";\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.slot {\r\n  display: inline-block;\r\n}\r\n</style>"]}]}